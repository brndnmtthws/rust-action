name: brndnmtthws/rust-action
description: |
  All-in-one Rust action with caching for linting, building, testing, and
  producing coverage reports.
author: Brenden Matthews <github@brenden.brndn.io>
branding:
  icon: box
  color: purple

inputs:
  toolchain:
    default: stable
    description: Specify a Rust toolchain.
  components:
    default: |
      clippy
      rustfmt
    description: Rust components to install along with the toolchain.
  cargo-packages:
    default: |
      cargo-tarpaulin
    description: The default set of cargo packages to install
  disable-cargo-registry-cache:
    description: If set to 'true', the Cargo registry cache will not be enabled.
  disable-cargo-target-cache:
    description: If set to 'true', the Cargo target cache will not be enabled.
  enable-sccache:
    description: If set to 'true', sccache will be enabled.
  target-cache-key:
    description: The cache key to use for caching the target dirs.
    required: true
    default: cargo-target-${{runner.os}}-${{ inputs.toolchain }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
  target-cache-restore-keys:
    description: The cache restore keys to use for caching the target dirs.
    required: true
    default: |
      cargo-target-${{runner.os}}-${{ inputs.toolchain }}
      cargo-target-${{runner.os}}-
  registry-cache-key:
    description: The cache key to use for caching the cargo registry.
    required: true
    default: cargo-registry-${{ inputs.toolchain }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
  registry-cache-restore-keys:
    description: The cache restore keys to use for caching the cargo registry.
    required: true
    default: |
      cargo-registry-${{ inputs.toolchain }}-
      cargo-registry-
  sccache-cache-key:
    description: The cache key to use for caching sccache.
    required: true
    default: sccache-${{runner.os}}-${{ inputs.toolchain }}-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}
  sccache-cache-restore-keys:
    description: The cache restore keys to use for caching sccache.
    required: true
    default: |
      sccache-${{runner.os}}-${{ inputs.toolchain }}-
      sccache-${{runner.os}}-

runs:
  using: 'composite'
  steps:
    - uses: brndnmtthws/rust-action-rustup@v1
      name: Install toolchain
      id: rustup
      with:
        toolchain: ${{ inputs.toolchain }}
        profile: minimal
        components: |
          rustfmt
          clippy
    - uses: actions/cache@v4
      name: Cache Cargo registry
      if: ${{ inputs.disable-cargo-registry-cache != 'true' }}
      with:
        key: ${{ inputs.registry-cache-key }}
        restore-keys: ${{ inputs.registry-cache-restore-keys }}
        path: |
          ~/.cargo/registry
    - uses: actions/cache@v4
      name: Cache Cargo target
      if: ${{ inputs.disable-cargo-target-cache != 'true' }}
      with:
        key: ${{ inputs.target-cache-key }}
        restore-keys: ${{ inputs.target-cache-restore-keys }}
        path: |
          **/target/*
    - uses: actions/cache@v4
      name: Cache sccache local files
      if: ${{ inputs.enable-sccache == 'true' }}
      with:
        key: ${{ inputs.sccache-cache-key }}
        restore-keys: ${{ inputs.sccache-cache-restore-keys }}
        path: |
          ~/.sccache
    - uses: brndnmtthws/rust-action-cargo-binstall@v1
      name: Install sccache
      if: ${{ inputs.enable-sccache == 'true' }}
      with:
        packages: sccache
    - shell: bash
      run: echo "SCCACHE_DIR=$HOME/.sccache" >> $GITHUB_ENV
      if: ${{ inputs.enable-sccache == 'true' }}
    - shell: bash
      run: echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      if: ${{ inputs.enable-sccache == 'true' }}
    - shell: bash
      run: echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
      if: ${{ inputs.enable-sccache == 'true' }}
    - uses: brndnmtthws/rust-action-cargo-binstall@v1
      name: Install Cargo packages
      with:
        packages: ${{ inputs.cargo-packages }}
